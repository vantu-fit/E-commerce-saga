version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    # volumes:
    #   - ./data/zookeeper/data:/data
    #   - ./data/zookeeper/datalog:/datalog
    networks:
      - api_network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    ports:
      - "9091:9091"
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19091,EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9091,DOCKER://host.docker.internal:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    # volumes:
    #   - ./data/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
        - api_network


  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka:7.3.2
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29091 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic purchase --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic purchase-result --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic update-product-inventory --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic rollback-product-inventory --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic create-order --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic rollback-order --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic create-payment --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic rollback-payment --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --if-not-exists --topic reply --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29091 --list

      # Produce a message for each topic
      kafka-console-producer --topic purchase --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from purchase topic"}
      EOF

      kafka-console-producer --topic purchase-result --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from purchase-result topic"}
      EOF

      kafka-console-producer --topic update-product-inventory --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from update-product-inventory topic"}
      EOF

      kafka-console-producer --topic rollback-product-inventory --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from rollback-product-inventory topic"}
      EOF

      kafka-console-producer --topic create-order --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from create-order topic"}
      EOF

      kafka-console-producer --topic rollback-order --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from rollback-order topic"}
      EOF

      kafka-console-producer --topic create-payment --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from create-payment topic"}
      EOF

      kafka-console-producer --topic rollback-payment --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from rollback-payment topic"}
      EOF

      kafka-console-producer --topic reply --bootstrap-server kafka:29091 << EOF
      {"message": "Hello from reply topic"}
      EOF
      "
    depends_on:
      - kafka
    networks:
      - api_network
networks:
  api_network:
    driver: bridge

    